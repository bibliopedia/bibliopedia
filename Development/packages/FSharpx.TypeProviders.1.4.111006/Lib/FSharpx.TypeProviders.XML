<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>FSharpx.TypeProviders</name></assembly>
<members>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.AppSettingsTypeProvider">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.DSL">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.FilesTypeProvider">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:FSharpx.TypeProviders.JSON.parse(System.Collections.Generic.IEnumerable{System.Char})">
<summary>
 Parses a JSON source text and returns an JSON AST
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.JSON">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.MiniCsvProvider">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.NamespaceProvider">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.RegexTypeProvider">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharpx.TypeProviders.Settings">

</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.TypeProviderForNamespaces.Invalidate">
<summary>
 Invalidate the information provided by the provider
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.TypeProviderForNamespaces.AddNamespace(System.String,Microsoft.FSharp.Collections.FSharpList{Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition})">
<summary>
 Add a namespace of provided types.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.TypeProviderForNamespaces.#ctor">
<summary>
 Initializes a type provider 
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.TypeProviderForNamespaces.#ctor(System.String,Microsoft.FSharp.Collections.FSharpList{Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition})">
<summary>
 Initializes a type provider to provide the types in the given namespace.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.TypeProviderForNamespaces">
<summary>
 A base type providing default implementations of type provider functionality when all provided 
 types are of type ProvidedTypeDefinition.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.SuppressRelocation(System.Boolean)">
<summary>
 Get or set a flag indicating if the ProvidedTypeDefinition has type-relocation suppressed
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.IsErased(System.Boolean)">
<summary>
 Get or set a flag indicating if the ProvidedTypeDefinition is erased
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.HideObjectMethods(System.Boolean)">
<summary>
 Suppress System.Object entries in intellisense menus in instances of this provided type 
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.SuppressRelocation">
<summary>
 Get or set a flag indicating if the ProvidedTypeDefinition has type-relocation suppressed
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.IsErased">
<summary>
 Get or set a flag indicating if the ProvidedTypeDefinition is erased
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.SetBaseType(System.Type)">
<summary>
 Set the base type
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.SetAttributes(System.Reflection.TypeAttributes)">
<summary>
 Set the attributes on the provided type. This fully replaces the default TypeAttributes.
</summary>
</member>
<member name="">

</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.DefineMethodOverride(Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod,System.Reflection.MethodInfo)">
<summary>
 Specifies that the given method body implements the given method declaration.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.ConvertToGenerated(System.String)">
<summary>
 Emit the given provided type definition and its nested type definitions into an assembly 
 and adjust the &apos;Assembly&apos; property of all provided type definitions to return that assembly.

 The assembly is only emitted when the Assembly property on the root type is accessed for the first time.
 The host F# compiler does this when processing a generative type declaration for the type.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary.
 The documentation is only computed once.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddXmlDocComputed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
 The documentation is re-computed  every time it is required.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddMembersDelayed``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Collections.FSharpList{``0}})">
<summary>
 Add a set of members to a ProvidedTypeDefinition, delaying computation of the members until required by the compilation context.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddMembers``1(Microsoft.FSharp.Collections.FSharpList{``0})">
<summary>
 Add a set of members to a ProvidedTypeDefinition
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddMemberDelayed``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})">
<summary>
 Add a member to a ProvidedTypeDefinition, delaying computation of the members until required by the compilation context.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddMember(System.Reflection.MemberInfo)">
<summary>
 Add a method, property, nested type or other member to a ProvidedTypeDefinition
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddInterfaceImplementation(System.Type)">
<summary>
 Add the given type as an implemented or inherited interface.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddDefinitionLocation(System.Int32,System.Int32,System.String)">
<summary>
 Add definition location information to the provided type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.AddAssemblyTypesAsNestedTypesDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Reflection.Assembly})">
<summary>
 Add the types of the generated assembly as generative types, where types in namespaces get hierarchically positioned as nested types.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.#ctor(System.String,Microsoft.FSharp.Core.FSharpOption{System.Type})">
<summary>
 Create a new provided type definition, to be located as a nested type in some type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition.#ctor(System.Reflection.Assembly,System.String,System.String,Microsoft.FSharp.Core.FSharpOption{System.Type})">
<summary>
 Create a new provided type definition in a namespace. 
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedTypeDefinition">
<summary>
 Represents a provided type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedStaticParameter.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedStaticParameter.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedStaticParameter.#ctor(System.String,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Object})">
<summary>
 Create a provided static parameter.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedStaticParameter">
<summary>
 Represents a provided static parameter.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.One">
<summary>
 e.g. 1
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.Default">
<summary>
 The ProvidedMeasureBuilder for building measures.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.Square(System.Type)">
<summary>
 e.g. m * m 
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.SI(System.String)">
<summary>
 the SI unit from the F# core library, where the string is in capitals and US spelling, e.g. Meter
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.Ratio(System.Type,System.Type)">
<summary>
 e.g. kg / m
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.Product(System.Type,System.Type)">
<summary>
 e.g. m * kg
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.Inverse(System.Type)">
<summary>
 e.g. 1 / kg
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder.AnnotateType(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type})">
<summary>
 e.g. float&lt;kg&gt;, Vector&lt;int, kg&gt;
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMeasureBuilder">
<summary>
 Represents a provided unit-of-measure annotation.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField.AddXmlDocComputed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
 The documentation is re-computed  every time it is required.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField.AddDefinitionLocation(System.Int32,System.Int32,System.String)">
<summary>
 Add definition location information to the provided type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField.#ctor(System.String,System.Type,System.Object)">
<summary>
 Create a new provided type. It is not initially associated with any specific provided type definition.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedLiteralField">
<summary>
 Represents a provided literal field.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.SetterCodeFromLinqExpression(Microsoft.FSharp.Core.FSharpFunc{System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression})">
<summary>
 Set the function used to compute the implementation of invocations of the setter method of this property, using LINQ expressions.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.SetterCode(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr})">
<summary>
 Set the function used to compute the implementation of invocations of the setter method of this property.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.IsStatic(System.Boolean)">
<summary>
 Get or set a flag indicating if the property is static.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.GetterCodeFromLinqExpression(Microsoft.FSharp.Core.FSharpFunc{System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression})">
<summary>
 Set the function used to compute the implementation of invocations of the getter method of this property, using LINQ expressions.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.GetterCode(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr})">
<summary>
 Set the function used to compute the implementation of invocations of the getter method of this property.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.SetterCodeFromLinqExpression">
<summary>
 Set the function used to compute the implementation of invocations of the setter method of this property, using LINQ expressions.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.GetterCodeFromLinqExpression">
<summary>
 Set the function used to compute the implementation of invocations of the getter method of this property, using LINQ expressions.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.AddXmlDocComputed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
 The documentation is re-computed  every time it is required.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.AddDefinitionLocation(System.Int32,System.Int32,System.String)">
<summary>
 Add definition location information to the provided type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty.#ctor(System.String,System.Type,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedParameter}})">
<summary>
 Create a new provided type. It is not initially associated with any specific provided type definition.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedProperty">
<summary>
 Represents a provided property.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.IsStaticMethod(System.Boolean)">
<summary>
 Get or set a flag indicating if the property is static.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.InvokeCodeFromLinqExpression(Microsoft.FSharp.Core.FSharpFunc{System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression})">
<summary>
 Set the function used to compute the implementation of invocations of this constructor.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.InvokeCode(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr})">
<summary>
 Set the quotation used to compute the implementation of invocations of this constructor.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.IsStaticMethod">
<summary>
 Get or set a flag indicating if the property is static.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.InvokeCodeFromLinqExpression">
<summary>
 Set the function used to compute the implementation of invocations of this constructor.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.AddXmlDocComputed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
 The documentation is re-computed  every time it is required.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="">

</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.AddDefinitionLocation(System.Int32,System.Int32,System.String)">
<summary>
 Add definition location information to the provided type definition.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod.#ctor(System.String,Microsoft.FSharp.Collections.FSharpList{Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedParameter},System.Type)">
<summary>
 Create a new provided method. It is not initially associated with any specific provided type definition.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedMethod">
<summary>
 Represents a provided method.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.InvokeCodeFromLinqExpression(Microsoft.FSharp.Core.FSharpFunc{System.Linq.Expressions.ParameterExpression[],System.Linq.Expressions.Expression})">
<summary>
 An alternative to InvokeCode that uses LINQ expressions to describe the code that implements invocations of this constructor.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.InvokeCode(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr})">
<summary>
 Set the quotation used to compute the implementation of invocations of this constructor.
</summary>
</member>
<member name="P:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.InvokeCodeFromLinqExpression">
<summary>
 An alternative to InvokeCode that uses LINQ expressions to describe the code that implements invocations of this constructor.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.AddXmlDocDelayed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the computation of the documentation is delayed until necessary
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.AddXmlDocComputed(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.String})">
<summary>
 Add XML documentation information to this provided constructor, where the documentation is re-computed  every time it is required.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.AddXmlDoc(System.String)">
<summary>
 Add XML documentation information to this provided constructor
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.AddDefinitionLocation(System.Int32,System.Int32,System.String)">
<summary>
 Add definition location information to the provided constructor.
</summary>
</member>
<member name="M:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor.#ctor(Microsoft.FSharp.Collections.FSharpList{Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedParameter})">
<summary>
 Create a new provided constructor. It is not initially associated with any specific provided type definition.
</summary>
</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedConstructor">
<summary>
 Represents a provided constructor.
</summary>
</member>
<member name="">

</member>
<member name="T:Samples.FSharpPreviewRelease2011.ProvidedTypes.ProvidedParameter">
<summary>
 Represents a provided parameter.
</summary>
</member>
</members>
</doc>
