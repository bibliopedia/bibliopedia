//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace Bibliopedia.ParsCit
{ // 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SOAPBinding", Namespace="http://citeseerx.org/algorithms/parscit/wsdl")]
    public partial class ParsCitService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
        private System.Threading.SendOrPostCallback extractCitationsOperationCompleted;
    
        /// <remarks/>
        public ParsCitService() {
            this.Url = "http://bibliopedia.org:10555/";
        }
    
        /// <remarks/>
        public event extractCitationsCompletedEventHandler extractCitationsCompleted;
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Parser", ResponseNamespace="urn:Parser", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("citations")]
        public string extractCitations(string filePath, string repositoryID, out string citeFile, out string bodyFile) {
            object[] results = this.Invoke("extractCitations", new object[] {
                                                                                filePath,
                                                                                repositoryID});
            citeFile = ((string)(results[1]));
            bodyFile = ((string)(results[2]));
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginextractCitations(string filePath, string repositoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extractCitations", new object[] {
                                                                         filePath,
                                                                         repositoryID}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndextractCitations(System.IAsyncResult asyncResult, out string citeFile, out string bodyFile) {
            object[] results = this.EndInvoke(asyncResult);
            citeFile = ((string)(results[1]));
            bodyFile = ((string)(results[2]));
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public void extractCitationsAsync(string filePath, string repositoryID) {
            this.extractCitationsAsync(filePath, repositoryID, null);
        }
    
        /// <remarks/>
        public void extractCitationsAsync(string filePath, string repositoryID, object userState) {
            if ((this.extractCitationsOperationCompleted == null)) {
                this.extractCitationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractCitationsOperationCompleted);
            }
            this.InvokeAsync("extractCitations", new object[] {
                                                                  filePath,
                                                                  repositoryID}, this.extractCitationsOperationCompleted, userState);
        }
    
        private void OnextractCitationsOperationCompleted(object arg) {
            if ((this.extractCitationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractCitationsCompleted(this, new extractCitationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void extractCitationsCompletedEventHandler(object sender, extractCitationsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractCitationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal extractCitationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    
        /// <remarks/>
        public string citeFile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    
        /// <remarks/>
        public string bodyFile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}